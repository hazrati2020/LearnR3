---
title: "Untitled"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

#visualization

```{r}
#create hiostogram
ggplot(NHANES_small, aes(x=BMI))+
    geom_histogram()
```

You can add options to executable code like this

```{r}
#create histogram
ggplot(NHANES_small, aes(x
```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

``` {=bmi))+}
    geom_histogram (na.rm = TRUE)
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
NHANES_small %>% 
    filter(BMI<=60) %>% 
    ggplot(aes(x=BMI))+
    geom_bar(na.rm = TRUE)
```

```{r}
#| fig-cap:"distribution of BMI."
#| label:fig-BMI-Histo
NHANES_small %>% 
    filter(BMI<=60) %>% 
    ggplot(aes(x=BMI))+
    geom_histogram(na.rm = TRUE)
```

```{r}
#create count barplot for education

ggplot(NHANES_small, aes(x=Education))+
    geom_histogram()

```

```{r}
#create count barplot for diabet

ggplot(NHANES_small, aes(x=Diabetes))+
    geom_bar()
```

```{r}

#| label: fig-diabetes-education
#| fig-cap: "Counts of Diabetes and Education."
#| fig-subcap:
#|   - "Number of those with or without Diabetes."
#|   - "Number of those with different educational status."
#| layout-ncol: 2
NHANES_small %>%
  filter(!is.na(Diabetes)) %>%
  ggplot(aes(x = Diabetes)) +
  geom_bar()

NHANES_small %>%
  filter(!is.na(Education)) %>%
  ggplot(aes(x = Education)) +
  geom_bar()
```

\`\`\` 

ploting two variable
```{r}
ggplot(NHANES_small, aes(x=BMI, y=Age))+
    geom_hex(na.rm = TRUE)
```

## add smoting

```{r}
ggplot(NHANES_small, aes(x=BMI, y=Age))+
    geom_hex(na.rm = TRUE)+
    geom_smooth(na.rm = TRUE)
```
```{r}
#dadged bar plot

NHANES_small %>% 
      filter(!is.na(Education), !is.na(Diabetes)) %>%
  ggplot(aes(x = Diabetes, fill = Education)) +
  geom_bar(position = position_dodge())

```

## two cathegorical variables



```{r}
#using mixed data
# Using mixed data
NHANES_small %>%
  filter(!is.na(Diabetes), BMI <= 60) %>%
  ggplot(aes(x = Diabetes, y = BMI)) +
  geom_violin(na.rm = TRUE)

```
##plotting three or more variables
```{r}
#plot systolic boold pressure in relation to education and diabetes

NHANES_small %>% 
    filter(!is.na(Diabetes), !is.na(Education)) %>% 
    ggplot(aes(x = Education, y = Age, colour = Diabetes)) +
  geom_boxplot(na.rm = TRUE)
```
#plotting bmi in relation to blood presure and age

```{r}
# Plot BMI in relation to systolic blood pressure and age
nhanes_exercise %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, colour = age)) +
  geom_point(na.rm = TRUE)
```


```{r}
library(styler)
```


```{r}
library(NHANES)
nhanes_exercise <- NHANES %>%
  rename_with(snakecase::to_snake_case) %>%
  rename(sex = gender)

```


```{r}
#| eval: false
# These are approximate caption titles
#| label: fig-distribution-ages
#| fig-cap: "Distribution of different age variables"
#| layout-ncol: 2
#| fig-subcap:
#|   - "Age at collection"
#|   - "Age of diabetes diagnosis"
# Distribution of age
ggplot(nhanes_exercise, aes(x = age)) +
  geom_density(na.rm = TRUE)

# Distribution of age at diabetes diagnosis
ggplot(nhanes_exercise, aes(x = diabetes_age)) +
  geom_density(na.rm = TRUE)
```
```
```{r}
# BMI in relation to mean arterial pressure
nhanes_exercise %>%
  mutate(mean_arterial_pressure = (bp_sys_ave + (2 * bp_dia_ave)) / 3) %>%
  ggplot(aes(x = bmi, y = mean_arterial_pressure)) +
  geom_hex(na.rm = TRUE) +
  geom_smooth()
```
```{r}

```

```{r}
# BMI in relation to mean arterial pressure
nhanes_exercise %>%
  mutate(mean_arterial_pressure = (bp_sys_ave + (2 * bp_dia_ave)) / 3) %>%
  ggplot(aes(x = bmi, y = mean_arterial_pressure)) +
  geom_hex(na.rm = TRUE) +
  geom_smooth()
```




```{r}
nhanes_exercise %>%
  mutate(mean_arterial_pressure = (bp_sys_ave + (2 * bp_dia_ave)) / 3) %>%
  ggplot(aes()(x = bmi, y = mean_arterial_pressure)) +
  geom_hex(na.rm = TRUE) +
  geom_smooth
``
